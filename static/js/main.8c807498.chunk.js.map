{"version":3,"sources":["images/list.svg","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","items","setitems","className","src","todo","alt","type","placeholder","value","onChange","e","target","title","onClick","map","elem","ind","id","console","log","updatedItems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,MAA0B,iC,OCkE1BA,EA/DF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAU,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KAqBA,OACI,mCACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAW,YAAhB,UACI,mCACI,qBAAKC,IAAKC,EAAMC,IAAI,aACpB,4EAGJ,sBAAKH,UAAU,YAAf,UACI,uBAAOI,KAAM,OAAOC,YAAa,yBAC7BC,MAAQV,EACRW,SAAW,SAACC,GAAD,OAAOX,EAAaW,EAAEC,OAAOH,UAE5C,mBAAGN,UAAU,qBAAqBU,MAAM,WAAWC,QAlCvD,WACPf,IAELG,EAAS,GAAD,mBAAKD,GAAL,CAAYF,KACpBC,EAAa,WAgCD,qBAAKG,UAAU,YAAf,SAEQF,EAAMc,KAAI,SAACC,EAAMC,GACb,OACI,sBAAKd,UAAU,WAAf,UACI,6BAAKa,IACL,mBAAGb,UAAU,2BAA2BU,MAAM,cAAcC,QAAU,kBAnCvF,SAACI,GACZC,QAAQC,IAAIF,GACZ,IAAMG,EAAepB,EAAMqB,QAAO,SAACN,EAAMC,GACrC,OAAOA,IAAQC,KAGvBhB,EAASmB,GA6BmGE,CAAWN,QAF5DA,QAU/C,qBAAKd,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAAaW,QAnCrE,WACXZ,EAAS,KAkCO,SAAiF,0DC9C1FsB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c807498.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/list.d8f5ee42.svg\";","import React, { useState } from 'react';\r\nimport todo from \"../images/list.svg\";\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setitems] = useState ([]);\r\n    const addItem = () => {\r\n        if (!inputData){}\r\n        else{\r\n        setitems([...items, inputData])\r\n        setInputData('')\r\n    }\r\n    }\r\n    const deleteItem = (id) => {\r\n            console.log(id);\r\n            const updatedItems = items.filter((elem, ind) => {\r\n                return ind !== id;\r\n        })\r\n\r\n        setitems(updatedItems);\r\n    }\r\n\r\n    const remove = () => {\r\n        setitems([]);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className= \"child-div\">\r\n                    <figure>\r\n                        <img src={todo} alt=\"todologo\"/>\r\n                        <figcaption>Add Your List Name ✌️</figcaption>\r\n                    </figure>\r\n\r\n                    <div className=\"aaddItems\">\r\n                        <input type= \"text\" placeholder= \"✍️ Add Items\"\r\n                            value= {inputData}\r\n                            onChange= {(e) => setInputData(e.target.value)}\r\n                        />\r\n                        <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick= {addItem}></i>\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((elem, ind) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={ind}>\r\n                                        <h1>{elem}</h1>\r\n                                        <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick= {() => deleteItem(ind)}></i>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={remove}><span>CHECK LIST</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport './App.css';\nimport Todo from \"./components/todo\";\n\nfunction App() {\n  return (\n    <div>\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}